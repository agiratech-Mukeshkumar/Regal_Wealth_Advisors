openapi: 3.0.0
info:
  title: Regal Wealth Advisors -  API
  version: 1.0.0
  description: RESTful API documentation for Regal Wealth Advisors 
servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    userId:
      name: userId
      in: path
      required: true
      schema:
        type: integer
    clientId:
      name: clientId
      in: path
      required: true
      schema:
        type: integer
    documentId:
      name: documentId
      in: path
      required: true
      schema:
        type: integer
    memberId:
      name: memberId
      in: path
      required: true
      schema:
        type: integer
    fieldId:
      name: fieldId
      in: path
      required: true
      schema:
        type: integer
    notificationId:
      name: notificationId
      in: path
      required: true
      schema:
        type: integer
    formName:
      name: formName
      in: path
      required: true
      schema:
        type: string
    slug:
      name: slug
      in: path
      required: true
      schema:
        type: string
    toolName:
      name: toolName
      in: path
      required: true
      schema:
        type: string
    type:
      name: type
      in: path
      required: true
      schema:
        type: string

security:
  - BearerAuth: []

tags:
  - name: Auth
  - name: Admin
  - name: Advisor
  - name: Client
  - name: common

paths:

  /auth/login:
    post:
      tags: [Auth]
      summary: Login and retrieve JWT
      security: []
      responses:
        200:
          description: JWT token returned

  /auth/logout:
    post:
      tags: [Auth]
      summary: Logout user
      responses:
        200:
          description: Logged out successfully

  /auth/enable-2fa:
    post:
      tags: [Auth]
      summary: Generate 2FA secret and QR code
      responses:
        200:
          description: 2FA QR and secret returned

  /auth/verify-2fa:
    post:
      tags: [Auth]
      summary: Verify 2FA token
      responses:
        200:
          description: 2FA verified

  /auth/settings/2fa:
    put:
      tags: [Auth]
      summary: Toggle 2FA
      responses:
        200:
          description: 2FA toggled

  /auth/change-password:
    put:
      tags: [Auth]
      summary: Change user password
      responses:
        200:
          description: Password changed

  /auth/me:
    get:
      tags: [Auth]
      summary: Get logged-in user profile
      responses:
        200:
          description: User profile returned

  /admin/users:
    get:
      tags: [Admin]
      summary: Get all users
      parameters:
        - in: query
          name: role
          schema:
            type: string
      responses:
        200:
          description: List of users
    post:
      tags: [Admin]
      summary: Create new user
      responses:
        201:
          description: User created

  /admin/users/{userId}:
    get:
      tags: [Admin]
      summary: Get single user
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        200:
          description: User detail
    put:
      tags: [Admin]
      summary: Update user info
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        200:
          description: User updated
    delete:
      tags: [Admin]
      summary: Delete user
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        204:
          description: User deleted

  /admin/settings:
    get:
      tags: [Admin]
      summary: Get all settings
      responses:
        200:
          description: Settings returned
    put:
      tags: [Admin]
      summary: Bulk update settings
      responses:
        200:
          description: Settings updated

  /admin/content/{slug}:
    get:
      tags: [Admin]
      summary: Get content page
      parameters:
        - $ref: '#/components/parameters/slug'
      responses:
        200:
          description: HTML content returned
    put:
      tags: [Admin]
      summary: Update content page
      parameters:
        - $ref: '#/components/parameters/slug'
      responses:
        200:
          description: Content updated

  /admin/forms/{formName}:
    get:
      tags: [Admin]
      summary: Get form structure
      parameters:
        - $ref: '#/components/parameters/formName'
      responses:
        200:
          description: Form structure returned

  /admin/forms/{formName}/fields:
    post:
      tags: [Admin]
      summary: Add new field
      parameters:
        - $ref: '#/components/parameters/formName'
      responses:
        201:
          description: Field added

  /admin/forms/fields/{fieldId}:
    put:
      tags: [Admin]
      summary: Update field
      parameters:
        - $ref: '#/components/parameters/fieldId'
      responses:
        200:
          description: Field updated
    delete:
      tags: [Admin]
      summary: Delete field
      parameters:
        - $ref: '#/components/parameters/fieldId'
      responses:
        204:
          description: Field deleted

  /advisor/dashboard/stats:
    get:
      tags: [Advisor]
      summary: Get dashboard stats
      responses:
        200:
          description: Stats returned

  /advisor/clients:
    get:
      tags: [Advisor]
      summary: Get advisor clients
      responses:
        200:
          description: Client list
    post:
      tags: [Advisor]
      summary: Onboard new client
      responses:
        201:
          description: Client onboarded

  /advisor/clients/{clientId}:
    get:
      tags: [Advisor]
      summary: Get client details
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        200:
          description: Client details
    delete:
      tags: [Advisor]
      summary: Delete client
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        204:
          description: Client deleted

  /advisor/clients/{clientId}/status:
    put:
      tags: [Advisor]
      summary: Change client status
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        200:
          description: Status changed

  /advisor/tools/{toolName}:
    post:
      tags: [Advisor]
      summary: Submit data to tool
      parameters:
        - $ref: '#/components/parameters/toolName'
      responses:
        200:
          description: Tool result returned

  /advisor/clients/{clientId}/plans:
    get:
      tags: [Advisor]
      summary: Get financial plans
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        200:
          description: Plans returned
    post:
      tags: [Advisor]
      summary: Create financial plan
      parameters:
        - $ref: '#/components/parameters/clientId'
      responses:
        201:
          description: Plan created

  /client/profile:
    get:
      tags: [Client]
      summary: Get own profile
      responses:
        200:
          description: Profile returned

  /client/profile/personal:
    put:
      tags: [Client]
      summary: Update personal info
      responses:
        200:
          description: Info updated

  /client/profile/spouse:
    put:
      tags: [Client]
      summary: Update spouse info
      responses:
        200:
          description: Info updated

  /client/profile/family:
    post:
      tags: [Client]
      summary: Add family member
      responses:
        201:
          description: Member added

  /client/profile/family/{memberId}:
    delete:
      tags: [Client]
      summary: Remove family member
      parameters:
        - $ref: '#/components/parameters/memberId'
      responses:
        204:
          description: Member removed

  /client/profile/questionnaire:
    put:
      tags: [Client]
      summary: Submit investor questionnaire
      responses:
        200:
          description: Questionnaire submitted

  /client/profile/financials/{type}:
    post:
      tags: [Client]
      summary: Add financial item
      parameters:
        - $ref: '#/components/parameters/type'
      responses:
        201:
          description: Item added

  /client/profile/financials/{type}/{itemId}:
    delete:
      tags: [Client]
      summary: Delete financial item
      parameters:
        - $ref: '#/components/parameters/type'
        - name: itemId
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Item deleted

  /client/profile/submit:
    post:
      tags: [Client]
      summary: Submit Fact Finder
      responses:
        200:
          description: Submission successful

  /client/documents:
    get:
      tags: [Client]
      summary: Get uploaded documents
      responses:
        200:
          description: List of documents

  /client/documents/upload:
    post:
      tags: [Client]
      summary: Upload document
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        201:
          description: Document uploaded

  /client/documents/{documentId}:
    delete:
      tags: [Client]
      summary: Delete document
      parameters:
        - $ref: '#/components/parameters/documentId'
      responses:
        204:
          description: Document deleted

  /notifications:
    get:
      tags: [common]
      summary: Get notifications
      responses:
        200:
          description: List of notifications

  /notifications/{notificationId}/read:
    put:
      tags: [common]
      summary: Mark notification as read
      parameters:
        - $ref: '#/components/parameters/notificationId'
      responses:
        200:
          description: Notification marked as read

  /send-email:
    post:
      tags: [common]
      summary: Send email
      responses:
        200:
          description: Email sent

